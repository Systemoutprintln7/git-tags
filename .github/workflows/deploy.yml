# This is a basic workflow to help you get started with Actions

name: server node - deploy beta

# Controls when the action will run. 

on:
  push:
    tags: ["*.*.*-beta-test", "*.*.*-alpha"]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PIPPO: ${{ github.ref }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world! ${{ github.ref }} ${{ github.sha }}!

      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=SERVICE_NAME::${GITHUB_REF/refs\/tags\/*\-*-/}

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        env:
          PLUTO: ${{ env.PIPPO }}-${{ steps.get_version.outputs.SERVICE_NAME }}
          SERVICE_NAMES: ${{ steps.get_version.outputs.SERVICE_NAME }}
        run: |
          echo Add other actions to build, ${{ github.ref }} ${{ github.sha }}
          echo test, and deploy your project. ${{ steps.get_version.outputs.SERVICE_NAME }} ${{ steps.get_version.outputs.VERSION }}
          echo ${{ steps.get_version.outputs.SERVICE_NAME }}
          echo $SERVICE_NAMES
          echo $PIPPO
          echo $PLUTO
